syntax = "proto3";

package nova.ism.v1;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/noble-assets/nova/types/ism";

service Msg {
  option (cosmos.msg.v1.service) = true;

  rpc Pause(MsgPause) returns (MsgPauseResponse);
  rpc Unpause(MsgUnpause) returns (MsgUnpauseResponse);
}

// MsgPause allows the module authority to pause the ISM.
message MsgPause {
  option (cosmos.msg.v1.signer) = "signer";
  option (amino.name) = "nova/ism/Pause";

  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string signer = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

// MsgPauseResponse is the response of the Pause message.
message MsgPauseResponse {}

// MsgUnpause allows the module authority to unpause the ISM.
message MsgUnpause {
  option (cosmos.msg.v1.signer) = "signer";
  option (amino.name) = "nova/ism/Unpause";

  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string signer = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

// MsgUnpauseResponse is the response of the Unpause message.
message MsgUnpauseResponse {}
